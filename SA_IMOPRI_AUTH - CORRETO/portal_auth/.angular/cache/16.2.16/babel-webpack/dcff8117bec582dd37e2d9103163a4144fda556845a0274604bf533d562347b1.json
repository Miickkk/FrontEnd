{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.email = '';\n    this.senha = '';\n    this.erro = '';\n  }\n  entrar() {\n    this.authService.login({\n      email: this.email,\n      senha: this.senha\n    }).subscribe(usuario => {\n      if (usuario) {\n        this.erro = '';\n        // Redireciona dependendo da permissão\n        if (usuario.permissao === 'corretor') {\n          this.router.navigate(['/interna-corretor']); // página admin\n        } else {\n          this.router.navigate(['/home']); // página de usuário comum\n        }\n      } else {\n        this.erro = 'Email ou senha inválidos';\n      }\n    }, erro => {\n      this.erro = 'Erro ao tentar logar. Tente novamente.';\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","authService","router","email","senha","erro","entrar","login","subscribe","usuario","permissao","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\DEVCASTELLOB\\Documents\\Anick\\FrontEnd\\FrontEnd\\SA_IMOPRI_AUTH - CORRETO\\portal_auth\\src\\app\\views\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n  email: string = '';\r\n  senha: string = '';\r\n  erro: string = '';\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  entrar() {\r\n    this.authService.login({ email: this.email, senha: this.senha }).subscribe(usuario => {\r\n      if (usuario) {\r\n        this.erro = '';\r\n\r\n        // Redireciona dependendo da permissão\r\n        if (usuario.permissao === 'corretor') {\r\n          this.router.navigate(['/interna-corretor']); // página admin\r\n        } else {\r\n          this.router.navigate(['/home']); // página de usuário comum\r\n        }\r\n\r\n      } else {\r\n        this.erro = 'Email ou senha inválidos';\r\n      }\r\n    }, erro => {\r\n      this.erro = 'Erro ao tentar logar. Tente novamente.';\r\n    });\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAJ5D,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,IAAI,GAAW,EAAE;EAEsD;EAEvEC,MAAMA,CAAA;IACJ,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MAAEJ,KAAK,EAAE,IAAI,CAACA,KAAK;MAAEC,KAAK,EAAE,IAAI,CAACA;IAAK,CAAE,CAAC,CAACI,SAAS,CAACC,OAAO,IAAG;MACnF,IAAIA,OAAO,EAAE;QACX,IAAI,CAACJ,IAAI,GAAG,EAAE;QAEd;QACA,IAAII,OAAO,CAACC,SAAS,KAAK,UAAU,EAAE;UACpC,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;SAC9C,MAAM;UACL,IAAI,CAACT,MAAM,CAACS,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;OAGpC,MAAM;QACL,IAAI,CAACN,IAAI,GAAG,0BAA0B;;IAE1C,CAAC,EAAEA,IAAI,IAAG;MACR,IAAI,CAACA,IAAI,GAAG,wCAAwC;IACtD,CAAC,CAAC;EACJ;CACD;AA1BYN,cAAc,GAAAa,UAAA,EAL1Bd,SAAS,CAAC;EACTe,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWhB,cAAc,CA0B1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}