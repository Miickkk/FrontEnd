{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MeusImoveisService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = \"http://localhost:3004/meus-imoveis\"; // endereço da API\n  }\n  // GET - obter a lista de imóveis\n  getMeusImoveis() {\n    return this.http.get(this.apiUrl);\n  }\n  // POST - adicionar um novo imóvel\n  postMeuImovel(meuImovel) {\n    return this.http.post(this.apiUrl, meuImovel);\n  }\n  // PUT - atualizar imóvel existente\n  putMeuImovel(id, meuImovel) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.put(url, meuImovel);\n  }\n  // DELETE - remover imóvel\n  deleteMeuImovel(id) {\n    const url = `${this.apiUrl}/${id}`;\n    return this.http.delete(url);\n  }\n  static {\n    this.ɵfac = function MeusImoveisService_Factory(t) {\n      return new (t || MeusImoveisService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MeusImoveisService,\n      factory: MeusImoveisService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["MeusImoveisService","constructor","http","apiUrl","getMeusImoveis","get","postMeuImovel","meuImovel","post","putMeuImovel","id","url","put","deleteMeuImovel","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\DEVCASTELLOB\\Documents\\Anick\\FrontEnd\\FrontEnd\\SA_IMOPRI_AUTH - CORRETO\\portal_auth\\src\\app\\services\\meus-imoveis.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MeuImovel } from '../models/meu-imovel.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MeusImoveisService {\r\n  private apiUrl = \"http://localhost:3004/meus-imoveis\"; // endereço da API\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // GET - obter a lista de imóveis\r\n  getMeusImoveis(): Observable<MeuImovel[]> {\r\n    return this.http.get<MeuImovel[]>(this.apiUrl);\r\n  }\r\n\r\n  // POST - adicionar um novo imóvel\r\n  postMeuImovel(meuImovel: MeuImovel): Observable<MeuImovel[]> {\r\n    return this.http.post<MeuImovel[]>(this.apiUrl, meuImovel);\r\n  }\r\n\r\n  // PUT - atualizar imóvel existente\r\n  putMeuImovel(id: any, meuImovel: MeuImovel): Observable<MeuImovel[]> {\r\n    const url = `${this.apiUrl}/${id}`;\r\n    return this.http.put<MeuImovel[]>(url, meuImovel);\r\n  }\r\n\r\n  // DELETE - remover imóvel\r\n  deleteMeuImovel(id: any): Observable<MeuImovel[]> {\r\n    const url = `${this.apiUrl}/${id}`;\r\n    return this.http.delete<MeuImovel[]>(url);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC,CAAC,CAAC;EAEhB;EAEvC;EACAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAc,IAAI,CAACF,MAAM,CAAC;EAChD;EAEA;EACAG,aAAaA,CAACC,SAAoB;IAChC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAc,IAAI,CAACL,MAAM,EAAEI,SAAS,CAAC;EAC5D;EAEA;EACAE,YAAYA,CAACC,EAAO,EAAEH,SAAoB;IACxC,MAAMI,GAAG,GAAG,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE;IAClC,OAAO,IAAI,CAACR,IAAI,CAACU,GAAG,CAAcD,GAAG,EAAEJ,SAAS,CAAC;EACnD;EAEA;EACAM,eAAeA,CAACH,EAAO;IACrB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE;IAClC,OAAO,IAAI,CAACR,IAAI,CAACY,MAAM,CAAcH,GAAG,CAAC;EAC3C;;;uBAzBWX,kBAAkB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAlBlB,kBAAkB;MAAAmB,OAAA,EAAlBnB,kBAAkB,CAAAoB,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}