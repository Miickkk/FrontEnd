{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let InternaComponent = class InternaComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.cliente = {}; // cliente logado, se houver\n    this.mostrarMenuItens = false; // para sinalizar ao app que é interna\n  }\n\n  ngOnInit() {\n    this.carregarCliente();\n    this.mostrarMenuItens = false; // itens do menu escondidos aqui\n  }\n\n  carregarCliente() {\n    this.cliente = this.authService.clienteAtual() || {};\n  }\n  logout() {\n    this.authService.logout();\n  }\n};\nInternaComponent = __decorate([Component({\n  selector: 'app-interna',\n  templateUrl: './interna.component.html',\n  styleUrls: ['./interna.component.scss']\n})], InternaComponent);","map":{"version":3,"names":["Component","InternaComponent","constructor","authService","router","cliente","mostrarMenuItens","ngOnInit","carregarCliente","clienteAtual","logout","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\DEVCASTELLOB\\Documents\\Anick\\FrontEnd\\FrontEnd\\SA_IMOPRI_AUTH - CORRETO\\portal_auth\\src\\app\\views\\interna\\interna.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-interna',\r\n  templateUrl: './interna.component.html',\r\n  styleUrls: ['./interna.component.scss'],\r\n})\r\nexport class InternaComponent implements OnInit {\r\n  cliente: any = {}; // cliente logado, se houver\r\n  mostrarMenuItens: boolean = false; // para sinalizar ao app que é interna\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.carregarCliente();\r\n    this.mostrarMenuItens = false; // itens do menu escondidos aqui\r\n  }\r\n\r\n  carregarCliente() {\r\n    this.cliente = this.authService.clienteAtual() || {};\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAI3BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAH5D,KAAAC,OAAO,GAAQ,EAAE,CAAC,CAAC;IACnB,KAAAC,gBAAgB,GAAY,KAAK,CAAC,CAAC;EAEoC;;EAEvEC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACF,gBAAgB,GAAG,KAAK,CAAC,CAAC;EACjC;;EAEAE,eAAeA,CAAA;IACb,IAAI,CAACH,OAAO,GAAG,IAAI,CAACF,WAAW,CAACM,YAAY,EAAE,IAAI,EAAE;EACtD;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACP,WAAW,CAACO,MAAM,EAAE;EAC3B;CACD;AAlBYT,gBAAgB,GAAAU,UAAA,EAL5BX,SAAS,CAAC;EACTY,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWb,gBAAgB,CAkB5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}