{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RegistroComponent = class RegistroComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.nome = '';\n    this.email = '';\n    this.senha = '';\n    this.erro = '';\n    this.sucesso = '';\n  }\n  // Função simples para verificar se tem @\n  temArroba(email) {\n    return email.includes('@');\n  }\n  registrar() {\n    // Resetar mensagens\n    this.erro = '';\n    this.sucesso = '';\n    // Validar se tem @ no email\n    if (!this.temArroba(this.email)) {\n      this.erro = 'Por favor, insira um email válido com @!';\n      return;\n    }\n    const novoUsuario = {\n      nome: this.nome,\n      email: this.email,\n      senha: this.senha\n    };\n    this.authService.registrar(novoUsuario).subscribe({\n      next: () => {\n        this.sucesso = \"Registro bem-sucedido! Vá para o login.\";\n        this.erro = '';\n      },\n      error: err => {\n        this.erro = 'Erro ao registrar: ' + err.message;\n      }\n    });\n  }\n};\nRegistroComponent = __decorate([Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.scss']\n})], RegistroComponent);","map":{"version":3,"names":["Component","RegistroComponent","constructor","authService","router","nome","email","senha","erro","sucesso","temArroba","includes","registrar","novoUsuario","subscribe","next","error","err","message","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\DEVCASTELLOB\\Documents\\Anick\\FrontEnd\\FrontEnd\\SA_IMOPRI_AUTH - CORRETO\\portal_auth\\src\\app\\views\\registro\\registro.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-registro',\r\n  templateUrl: './registro.component.html',\r\n  styleUrls: ['./registro.component.scss']\r\n})\r\nexport class RegistroComponent {\r\n  nome: string = '';\r\n  email: string = '';\r\n  senha: string = '';\r\n  erro: string = '';\r\n  sucesso: string = '';\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  // Função simples para verificar se tem @\r\n  temArroba(email: string): boolean {\r\n    return email.includes('@');\r\n  }\r\n\r\n  registrar() {\r\n    // Resetar mensagens\r\n    this.erro = '';\r\n    this.sucesso = '';\r\n\r\n    // Validar se tem @ no email\r\n    if (!this.temArroba(this.email)) {\r\n      this.erro = 'Por favor, insira um email válido com @!';\r\n      return;\r\n    }\r\n\r\n    const novoUsuario = {\r\n      nome: this.nome,\r\n      email: this.email,\r\n      senha: this.senha\r\n    };\r\n\r\n    this.authService.registrar(novoUsuario).subscribe({\r\n      next: () => {\r\n        this.sucesso = \"Registro bem-sucedido! Vá para o login.\";\r\n        this.erro = '';\r\n      },\r\n      error: (err) => {\r\n        this.erro = 'Erro ao registrar: ' + err.message;\r\n      }\r\n    });\r\n  }\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAO5BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAN5D,KAAAC,IAAI,GAAW,EAAE;IACjB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,IAAI,GAAW,EAAE;IACjB,KAAAC,OAAO,GAAW,EAAE;EAEmD;EAEvE;EACAC,SAASA,CAACJ,KAAa;IACrB,OAAOA,KAAK,CAACK,QAAQ,CAAC,GAAG,CAAC;EAC5B;EAEAC,SAASA,CAAA;IACP;IACA,IAAI,CAACJ,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,OAAO,GAAG,EAAE;IAEjB;IACA,IAAI,CAAC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACJ,KAAK,CAAC,EAAE;MAC/B,IAAI,CAACE,IAAI,GAAG,0CAA0C;MACtD;;IAGF,MAAMK,WAAW,GAAG;MAClBR,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,KAAK,EAAE,IAAI,CAACA;KACb;IAED,IAAI,CAACJ,WAAW,CAACS,SAAS,CAACC,WAAW,CAAC,CAACC,SAAS,CAAC;MAChDC,IAAI,EAAEA,CAAA,KAAK;QACT,IAAI,CAACN,OAAO,GAAG,yCAAyC;QACxD,IAAI,CAACD,IAAI,GAAG,EAAE;MAChB,CAAC;MACDQ,KAAK,EAAGC,GAAG,IAAI;QACb,IAAI,CAACT,IAAI,GAAG,qBAAqB,GAAGS,GAAG,CAACC,OAAO;MACjD;KACD,CAAC;EACJ;CACD;AAzCYjB,iBAAiB,GAAAkB,UAAA,EAL7BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWrB,iBAAiB,CAyC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}