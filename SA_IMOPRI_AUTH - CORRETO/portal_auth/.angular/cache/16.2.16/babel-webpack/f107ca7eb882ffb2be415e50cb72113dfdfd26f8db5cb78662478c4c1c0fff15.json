{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    const cliente = this.authService.clienteAtual();\n    if (!cliente) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n    // Apenas corretor pode acessar /interna-corretor\n    if (window.location.href.includes('interna-corretor') && cliente.permissao !== 'corretor') {\n      this.router.navigate(['/home']);\n      return false;\n    }\n    return true;\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","cliente","clienteAtual","navigate","window","location","href","includes","permissao","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\DEVCASTELLOB\\Documents\\Anick\\FrontEnd\\FrontEnd\\SA_IMOPRI_AUTH - CORRETO\\portal_auth\\src\\app\\guardas\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    const cliente = this.authService.clienteAtual();\r\n\r\n    if (!cliente) {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n\r\n    // Apenas corretor pode acessar /interna-corretor\r\n    if (window.location.href.includes('interna-corretor') && cliente.permissao !== 'corretor') {\r\n      this.router.navigate(['/home']);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n"],"mappings":";;;AAOA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CAAA;IACT,MAAMC,OAAO,GAAG,IAAI,CAACH,WAAW,CAACI,YAAY,EAAE;IAE/C,IAAI,CAACD,OAAO,EAAE;MACZ,IAAI,CAACF,MAAM,CAACI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;IAGd;IACA,IAAIC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAAC,kBAAkB,CAAC,IAAIN,OAAO,CAACO,SAAS,KAAK,UAAU,EAAE;MACzF,IAAI,CAACT,MAAM,CAACI,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;IAGd,OAAO,IAAI;EACb;;;uBAlBWP,SAAS,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAATlB,SAAS;MAAAmB,OAAA,EAATnB,SAAS,CAAAoB,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}